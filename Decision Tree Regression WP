#Decision tree model
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt


# Preprocessing the data (same as before)
X = df[['Wind_Speed']]  # Features (independent variable)
y = df['Power_Output']  # Target (dependent variable)

# Splitting the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Training the decision tree regression model
tree_model = DecisionTreeRegressor(random_state=42)
tree_model.fit(X_train, y_train)

# Making predictions
y_pred_tree = tree_model.predict(X_test)

# Evaluating the model
mse_tree = mean_squared_error(y_test, y_pred_tree)
r2_tree = r2_score(y_test, y_pred_tree)

print(f'Mean Squared Error (Decision Tree): {mse_tree}')
print(f'RÂ² Score (Decision Tree): {r2_tree}')

# Plotting the results
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.scatter(X_test, y_pred_tree, color='green', label='Predicted (Decision Tree)')
plt.xlabel('Wind Speed')
plt.ylabel('Power Output')
plt.title('Decision Tree Regression: Wind Speed vs Power Output')
plt.legend()
plt.show()
